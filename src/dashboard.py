import pandas as pd
import plotly.graph_objs as go
from dash import Dash, html, dcc
import os

# Alkalmaz치s inicializ치l치sa
app = Dash(__name__)
app.title = "Predikci칩s Vizualiz치ci칩"

# CSV 칰tvonal
CSV_PATH = "logs/feedback_dataset.csv"

# Adatok beolvas치sa, ha l칠tezik a f치jl
if os.path.exists(CSV_PATH):
    df = pd.read_csv(CSV_PATH)
    df = df.tail(50)  # Csak az utols칩 50 sor jelenik meg
else:
    df = pd.DataFrame()

# Grafikon 칬ssze치ll칤t치sa
fig = go.Figure()

if not df.empty:
    # 츼r
    fig.add_trace(go.Scatter(x=df["timestamp"], y=df["price"], mode="lines+markers", name="Price"))
    # EMA-k
    fig.add_trace(go.Scatter(x=df["timestamp"], y=df["ema_5"], mode="lines", name="EMA 5"))
    fig.add_trace(go.Scatter(x=df["timestamp"], y=df["ema_13"], mode="lines", name="EMA 13"))
    fig.add_trace(go.Scatter(x=df["timestamp"], y=df["ema_62"], mode="lines", name="EMA 62"))

    # Buy/Sell szign치lok megjelen칤t칠se
    fig.add_trace(go.Scatter(
        x=df["timestamp"],
        y=df["price"],
        mode="markers",
        marker=dict(
            size=10,
            color=["green" if s == "buy" else "red" for s in df["final_signal"]],
            symbol=["triangle-up" if s == "buy" else "triangle-down" for s in df["final_signal"]]
        ),
        name="Signal"
    ))

# Layout testreszab치sa
fig.update_layout(
    title="游늳 츼r 칠s EMA mozg칩치tlagok",
    xaxis_title="Id콈",
    yaxis_title="츼r (USDT)",
    height=600
)

# Dash megjelen칤t칠s
app.layout = html.Div([
    html.H1("游늵 Predikci칩s Vizualiz치ci칩", style={"textAlign": "center"}),
    dcc.Graph(figure=fig)
])

# Szerver ind칤t치sa
if __name__ == "__main__":
    app.run(debug=True)


